<form>
  <label>Infrastructure</label>
  <!--<row depends="$showDetails$">-->
  <!--  <panel>-->
  <!--    <html>-->
  <!--    <h3>Drilldown Details</h3>-->
  <!--    <table cellpadding="2" cellspacing="0">-->
  <!--      <tr>-->
  <!--        <th style="text-align:left; width:100px;">field</th>-->
  <!--        <th style="text-align:left">value</th>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Last Similar response status</td>-->
  <!--        <td>$time$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Number of User's with similar response status</td>-->
  <!--        <td>$sourcetype$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Number of errors produced by user</td>-->
  <!--        <td>$message$</td>-->
  <!--      </tr>-->
  <!--    </table>-->
  <!--  </html>-->
  <!--  </panel>-->
  <!--  <panel>-->
  <!--    <html>-->
  <!--    <h3>Infastructure</h3>-->
  <!--    <table cellpadding="2" cellspacing="0">-->
  <!--      <tr>-->
  <!--        <th style="text-align:left; width:100px;">Previous</th>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>API Status</td>-->
  <!--        <td>$prevapi$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Gateway Status</td>-->
  <!--        <td>$prevgateway$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Elasticsearch Status</td>-->
  <!--        <td>$prevelastic$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <th style="text-align:left">Current</th>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>API Status</td>-->
  <!--        <td>$current$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Gateway Status</td>-->
  <!--        <td>$current$</td>-->
  <!--      </tr>-->
  <!--      <tr>-->
  <!--        <td>Elasticsearch Status</td>-->
  <!--        <td>$current$</td>-->
  <!--      </tr>-->
  <!--    </table>-->
  <!--  </html>-->
  <!--  </panel>-->
  <!--</row>-->
  <fieldset submitButton="true" autoRun="true">
    <input type="time" token="token_time" searchWhenChanged="true">
      <label>Set Date and Time:</label>
      <default>
        <earliest>-1d@d</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="text" token="raw_input" searchWhenChanged="true">
      <label>Raw query</label>
      <prefix> </prefix>
    </input>
    <input type="multiselect" token="http_status_code_selecter" searchWhenChanged="true">
      <label>HTTP Status codes:</label>
      <default>*</default>
      <!-- The final value will be surrounded by prefix and suffix -->
      <prefix>(</prefix>
      <suffix>)</suffix>
      <!-- Each value will be surrounded by the valuePrefix and valueSuffix -->
      <valuePrefix>request_status="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <!-- All the values and their valuePrefix and valueSuffix will be concatenated together with the delimiter between them -->
      <delimiter> OR </delimiter>
      <fieldForLabel>request_status</fieldForLabel>
      <fieldForValue>request_status</fieldForValue>
      <search>
        <query>index="api_gw_collect_std" | stats count by request_status</query>
        <earliest>0</earliest>
      </search>
      <choice value="*">Include   All</choice>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>API Gateway Health</title>
      <single>
        <search>
          <query>index="api_gw_collect_std"  sourcetype="gw-health-log" | rex "\&lt;h1\&gt;(?&lt;Status&gt;[^\&lt;\/h1\&gt;]*)" | where Status = "OK" | stats count as GW1 | appendcols [search index="api_gw_collect_std"   sourcetype="gw-health-log" | rex "\&lt;h1\&gt;(?&lt;Status&gt;[^\&lt;\/h1\&gt;]*)" | where Status = "OK" | stats count as GW2 ] | eval Total = GW1 + GW2 | eval statusConverter = case (Total &gt;= 2, 1, Total = 1, 2, Total = 0, 3, 0=0, 4 ) | stats sum(statusConverter) as errors | rangemap field=errors low=1-1 elevated=2-2 severe=3-3 default=severe | replace 1 with "Service OK", 2 with "Failure", 3 with "Critical Failure", 4 with "Unknown Error"</query>
          <earliest>-1m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x65a637","0x6db7c6","0xf7bc38","0xf58f39","0xd93f3c"]</option>
        <option name="rangeValues">[0,30,70,100]</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="unitPosition">after</option>
        <option name="useColors">0</option>
        <option name="useThousandSeparators">1</option>
      </single>
    </panel>
    <panel>
      <title>Elasticsearch Health</title>
      <single>
        <search>
          <query>index = "api_gw_collect_std" sourcetype="elasticsearch-shards-health-log" | head 1 | eval Status = status | eval statusConverter = case (Status = "green", 1, Status = "yellow", 2, Status = "red", 3, 0=0, 4 ) | stats sum(statusConverter) as errors | rangemap field=errors low=1-1 elevated=2-2 severe=3-3 default=none | replace 1 with "Service OK", 2 with "Warning", 3 with "Critical", 4 with "Unkown Error"</query>
          <earliest>rt-5m</earliest>
          <latest>rt</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">{"green":"0x2B9954", "red":"0xDC143C", "yellow":"0xE0EA75"}</option>
        <option name="rangeValues">[0,30,70,100]</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="unitPosition">after</option>
        <option name="useColors">0</option>
        <option name="useThousandSeparators">1</option>
      </single>
    </panel>
    <panel>
      <title>Backend API Health</title>
      <single>
        <search>
          <query>index="api_gw_collect_std"  sourcetype="bi-api-health-log" | head 1 | rex "Status: (?&lt;Status&gt;[^]*) , Uptime:(?&lt;uptime&gt;[^ ]*)"  | stats count as Total | eval statusConverter = case (Status = "Ok" AND Total = 1, 1, Status = "Warning", 2, Total != 1, 3, 1=1, 4 ) | stats sum(statusConverter) as errors | rangemap field=errors low=1-1 elevated=2-2 severe=3-3 default=severe | replace 1 with "Service OK", 2 with "Failure", 3 with "Critical Failure", 4 with "Unknown Error"</query>
          <earliest>-30m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x65a637","0x6db7c6","0xf7bc38","0xf58f39","0xd93f3c"]</option>
        <option name="rangeValues">[0,30,70,100]</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="unitPosition">after</option>
        <option name="useColors">0</option>
        <option name="useThousandSeparators">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <input type="dropdown" searchWhenChanged="true" token="memory_unit_init">
        <label>Set Memory Unit</label>
        <choice value="| eval computed_output = tostring(output_size/1000) + &quot; Kb&quot;">Kilobytes (Kb)</choice>
        <choice value="| eval computed_output = tostring((output_size / 1000) / 1000)+ &quot; Mb&quot;">Megabytes (Mb)</choice>
        <choice value="| eval computed_output = tostring(((output_size / 1000) / 1000) /1000 ) + &quot; Gb&quot;">Gigabytes (Gb)</choice>
        <fieldForLabel>Label</fieldForLabel>
        <fieldForValue>Value</fieldForValue>
        <default>| eval computed_output = tostring((output_size / 1000) / 1000)+ " Mb"</default>
      </input>
      <input type="dropdown" searchWhenChanged="true" token="api_id">
        <label>Set API Type/ Project</label>
        <choice value="| where api = &quot;index.business&quot;">Business Index (BI)</choice>
        <choice value="| where api = &quot;index.address&quot;">Address Index (AI)</choice>
        <choice value="| where api = &quot;index-sbr&quot;">Statistical Business Register (SBR)</choice>
        <fieldForLabel>Label</fieldForLabel>
        <fieldForValue>Value</fieldForValue>
        <default>| where api = "index.business"</default>
      </input>
      <input type="dropdown" searchWhenChanged="true" token="env_id">
        <label>Set Environment</label>
        <choice value="| where env = &quot;test&quot;">Testing</choice>
        <choice value="| where env = &quot;beta&quot;">Production</choice>
        <choice value="| where env = &quot;dev&quot;">Development</choice>
        <fieldForLabel>Label</fieldForLabel>
        <fieldForValue>Value</fieldForValue>
        <default>| where env = "test"</default>
      </input>
      <input type="dropdown" token="organisation_id" searchWhenChanged="true">
        <label>Set Organisation</label>
        <choice value="">All</choice>
        <choice value="| where organisation=&quot;ONS&quot;">ONS</choice>
        <choice value="| where organisation=&quot;HMRC&quot;">HMRC</choice>
        <choice value="| where organisation=&quot;Crown&quot;">Crown Commercial</choice>
        <choice value="| where organisation=&quot;Welsh&quot;">Welsh Assembly</choice>
        <choice value="| where organisation=&quot;Company&quot;">Company House</choice>
        <fieldForLabel>Label</fieldForLabel>
        <fieldForValue>Value</fieldForValue>
        <default>| where organisation="ONS"</default>
      </input>
      <table>
        <title>Last 10 Events (Click to see available field tokens)</title>
        <search>
          <query>index = "api_gw_collect_std"  $api_id$  $env_id$  $organisation_id$ $memory_unit_init$  $raw_input$ | replace "*/search" WITH "Search" IN query_type | replace "*/ingress" WITH "Ingress" IN query_type | replace 200 WITH "Success: Ok (200)" IN request_status |  replace 400 WITH "Failed: Bad Request (400)" IN request_status   |  replace 404 WITH "Failed: Not Found (404)" IN request_status | replace 500 WITH "Failed: Internal Server Error (500)" IN request_status | eval start_date = substr(start_time, 1,10) | eval end_date = substr(end_time, 1,10) | eval start_substr = substr(start_time, len(start_time)-12,12) | eval end_substr = substr(end_time, len(end_time)-12,12) | eval start_strf = strptime(start_substr, "%H:%M:%S.%3N") | eval end_strf = strptime(end_substr, "%H:%M:%S.%3N") | eval temp_math = tostring( (end_strf - start_strf), "duration") | eval difference = replace (temp_math, "(\d+)\:(\d+)\:(\d+)"," \3") | eval concat_start =  start_date + " " +  start_substr | eval concat_end =  end_date + " " +  end_substr  | streamstats current=f window=1 global=f last(concat_end) as previous_elastic | where concat_end!=previous_elastic | streamstats current=f window=1 global=f last(concat_end) as previous_api | where concat_end!=previous_api | streamstats current=f window=1 global=f last(concat_end) as previous_gateway | where concat_end!=previous_gateway | table GUID, organisation, concat_start, concat_end, difference, query_type, records_returned, computed_output, request_status, _time, previous_gateway, previous_elastic, previous_api | rename GUID AS "Request ID", organisation AS "Organisation", concat_start AS "Requests Date and Time", concat_end AS "Response Date and Time", query_type AS "Query Type", records_returned AS "Number of Records Returned", computed_output AS "Output Size", request_status AS "Request Result", difference AS "Time taken to Finish"</query>
          <earliest>$token_time.earliest$</earliest>
          <latest>$token_time.latest$</latest>
        </search>
        <!-- Use the fields option to list the result feilds to explicitly display -->
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">true</option>
        <format type="color" field="Request Result">
          <colorPalette type="map">{"Success: Ok (200)":#65A637,"Failed: Internal Server Error (500)":#D93F3C,"Failed: Bad Request (400)":#D93F3C,"Failed: Not Found (404)":#D93F3C}</colorPalette>
        </format>
        <format type="color" field="Time taken to Finish">
          <colorPalette type="list">[#65A637,#F7BC38,#D93F3C]</colorPalette>
          <scale type="threshold">0.5,1</scale>
        </format>
        <fields>["Request ID","Requests Date and Time","Response Date and Time","Time taken to Finish","Query Type","Number of Records Returned","Output Size","Request Result"]</fields>
        <drilldown>
          <set token="showDetails">true</set>
          <set token="prevapi">$row.previous_api$</set>
          <set token="prevelastic">$row.previous_elastic$</set>
          <set token="prevgateway">$row.previous_gateway$</set>
          <!-- Set tokens based on hidden fields in the result table -->
          <set token="date_year">$row.date_year$</set>
          <set token="current">$row.concat_start$</set>
          <set token="date_mday">$row.date_mday$</set>
          <set token="date_wday">$row.date_wday$</set>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Response Statuses - Errors and Successes</title>
      <!--
      @description Average Line Toggle - A toggle to switch on or off (default) the average lines, which are 
      computed for all requests status types.
      @choice {radio} On - Typically displays average lines on the graph for each response status
      @choice {radio} Off - The grapph without a average lines
      -->
      <!--
      @feature: JS button
      
      @description - when pressed the panel is split into two, with the right most portion displaying a pie chart of the overall 
      user group usage.
      -->
      <input type="radio" token="response_code_average_switch" searchWhenChanged="true">
        <label>Average Line Toggle:</label>
        <default>Off</default>
        <choice value="eventstats avg(&quot;404&quot;) AS &quot;Average 404&quot; | eventstats avg(&quot;400&quot;) AS &quot;Average 400&quot;">On</choice>
        <choice value="">Off</choice>
      </input>
      <chart>
        <title>Response Statuses Overtime</title>
        <search>
          <query>index = "api_gw_collect_std" $http_status_code_selecter$  | where api = "index.business"  | timechart count as "Number of Queries" by request_status usenull=f | replace 0 WITH NULL</query>
          <earliest>$token_time.earliest$</earliest>
          <latest>$token_time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisTitleX.text">Date</option>
        <option name="charting.axisTitleY.text">Total Number of Queries</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">zero</option>
        <option name="charting.chart.overlayFields">"Average Successes", "Average Failed"</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.fieldColors">{"Success":0x2B9954, "Failed":0xDC143C}</option>
        <option name="charting.legend.masterLegend">null</option>
        <option name="height">300</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Elasticsearch Health</title>
      <chart>
        <search>
          <query>index = "api_gw_collect_std"  sourcetype="elasticsearch-shards-health-log" | timechart count by status</query>
          <earliest>@w0</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.layout.splitSeries">1</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Elasticsearch Indices Health</title>
      <input type="dropdown" searchWhenChanged="true" token="index_name">
        <label>Index Name</label>
        <choice value="bi-beta-april">BI Production</choice>
        <choice value="bi-dev-april">BI Development</choice>
        <choice value="bi-test-april">BI Testing</choice>
        <choice value="hybrid-hierarchy_39_100316_1492524204456">AI Production</choice>
        <choice value="hybrid_hierarchy_1490264601307">AI Development</choice>
        <fieldForLabel>Label</fieldForLabel>
        <fieldForValue>Value</fieldForValue>
        <default>bi-dev-april</default>
      </input>
      <table>
        <title>Shard Status Table</title>
        <search>
          <query>index = "api_gw_collect_std" sourcetype="elasticsearch-shards-health-log"  | eval  time = strftime(_time, "%Y-%d-%m %H:%M:%S") | table time, active_primary_shards, active_shards, delayed_unassigned_shards, indices.$index_name$.active_shards, indices.$index_name$.number_of_shards, indices.$index_name$.shards.0.status, indices.$index_name$.shards.1.status, indices.$index_name$.shards.2.status, indices.$index_name$.shards.3.status, indices.$index_name$.shards.4.status, indices.$index_name$.status | rename time AS "Time", active_primary_shards AS "Active Primary Shards (Overall)", active_shards AS "Active Shards (Overall)", delayed_unassigned_shards AS "Delayed Unassigned Shards (Overall)", indices.$index_name$.active_shards AS "Number of Shards", indices.$index_name$.number_of_shards AS "Number of Shards", indices.$index_name$.shards.0.status AS "Shard 0 Status", indices.$index_name$.shards.1.status AS "Shard 1 Status", indices.$index_name$.shards.2.status AS "Shard 2 Status", indices.$index_name$.shards.3.status AS "Shard 3 Status", indices.$index_name$.shards.4.status AS "Shard 4 Status", indices.$index_name$.status AS "Overall Shard Status"</query>
          <earliest>@w0</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="percentagesRow">false</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <format type="color" field="Shard 0 Status">
          <colorPalette type="map">{"green":#65A637,"yelllow":#F7BC38,"red":#D93F3C}</colorPalette>
        </format>
        <format type="color" field="Shard 1 Status">
          <colorPalette type="map">{"green":#65A637,"yellow":#F7BC38,"red":#D93F3C}</colorPalette>
        </format>
        <format type="color" field="Shard 2 Status">
          <colorPalette type="map">{"green":#65A637,"yellow":#F7BC38,"red":#D93F3C}</colorPalette>
        </format>
        <format type="color" field="Shard 3 Status">
          <colorPalette type="map">{"red":#D93F3C,"yellow":#F7BC38,"green":#65A637}</colorPalette>
        </format>
        <format type="color" field="Shard 4 Status">
          <colorPalette type="map">{"red":#D93F3C,"yellow":#F7BC38,"green":#65A637}</colorPalette>
        </format>
        <format type="color" field="Overall Shard Status">
          <colorPalette type="map">{"red":#D93F3C,"yellow":#F7BC38,"green":#65A637}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>API Gateway Health</title>
      <chart>
        <search>
          <query>index="api_gw_collect_std"  sourcetype="gw-health-log" | rex "\&lt;h1\&gt;(?&lt;Status&gt;[^\&lt;\/h1\&gt;]*)" | timechart 
avg(Status) by Status</query>
          <earliest>@mon</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.text">Date</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.text">Status Count</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">right</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Index Health</title>
      <chart>
        <search>
          <query>index="api_gw_collect_std"  sourcetype="bi-api-health-log"  | rex "Status: (?&lt;Status&gt;[^]*) , Uptime:(?&lt;uptime&gt;[^ ]*)" | timechart count by Status</query>
          <earliest>@mon</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">-45</option>
        <option name="charting.axisTitleX.text">Date</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.text">Status Count</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">right</option>
      </chart>
    </panel>
  </row>
</form>
